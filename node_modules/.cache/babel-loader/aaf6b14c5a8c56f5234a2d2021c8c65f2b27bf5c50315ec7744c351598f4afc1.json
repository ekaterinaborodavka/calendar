{"ast":null,"code":"var _jsxFileName = \"/Users/mastersky/work/calendar/src/components/calendar/Month.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { daysOfWeek } from \"../../constants\";\nimport { getDaysInMonth, getDaysInPreviousMonth, getFirstDayOfMonth } from \"../../utils\";\nimport \"./calendar.css\";\nimport { EventPopup } from \"./EventPopup\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Month = ({\n  month,\n  events\n}) => {\n  _s();\n  const {\n    name,\n    year\n  } = month;\n  const [isPopupVisible, setPopupVisible] = useState(false);\n  const [selectedDayEvents, setSelectedDayEvents] = useState([]);\n  const [popupPosition, setPopupPosition] = useState({\n    top: 0,\n    left: 0\n  });\n  const daysInMonth = getDaysInMonth(year, month.month);\n  const firstDay = getFirstDayOfMonth(year, month.month);\n  const days = [];\n  const daysInPrevMonth = getDaysInPreviousMonth(year, month.month);\n  for (let i = firstDay - 1; i >= 0; i--) {\n    days.push({\n      number: daysInPrevMonth - i,\n      isCurrentMonth: false\n    });\n  }\n  for (let day = 1; day <= daysInMonth; day++) {\n    days.push({\n      number: day,\n      isCurrentMonth: true,\n      events: events.filter(event => new Date(event.date).getFullYear() === year && new Date(event.date).getMonth() === month.month && new Date(event.date).getDate() === day)\n    });\n  }\n  const handleDayClick = (day, event) => {\n    var _days$find;\n    const dayEvents = ((_days$find = days.find(d => d.number === day)) === null || _days$find === void 0 ? void 0 : _days$find.events) || [];\n    setSelectedDayEvents(dayEvents);\n    setPopupPosition({\n      top: event.clientY,\n      left: event.clientX\n    });\n    setPopupVisible(true);\n  };\n  const handleClosePopup = () => {\n    setPopupVisible(false);\n    setSelectedDayEvents([]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"month\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"month_content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"month_name\",\n        children: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"days_of_week\",\n        children: daysOfWeek.map((day, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"day_week\",\n          children: day\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"days\",\n        children: days.map((day, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `day ${!day.isCurrentMonth ? \"prev\" : \"\"}`,\n          onClick: e => handleDayClick(day.number, e),\n          children: [day.number, /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"day_indicators\",\n            children: [\" \", day.events && day.events.map((event, eventIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `day_indicator ${event.type}`\n            }, eventIndex, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 21\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), isPopupVisible && /*#__PURE__*/_jsxDEV(EventPopup, {\n      events: selectedDayEvents,\n      onClose: handleClosePopup,\n      position: popupPosition\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s(Month, \"/IDr41Cy8/jCX2VSzBp6ozYv0CQ=\");\n_c = Month;\nvar _c;\n$RefreshReg$(_c, \"Month\");","map":{"version":3,"names":["useState","daysOfWeek","getDaysInMonth","getDaysInPreviousMonth","getFirstDayOfMonth","EventPopup","jsxDEV","_jsxDEV","Month","month","events","_s","name","year","isPopupVisible","setPopupVisible","selectedDayEvents","setSelectedDayEvents","popupPosition","setPopupPosition","top","left","daysInMonth","firstDay","days","daysInPrevMonth","i","push","number","isCurrentMonth","day","filter","event","Date","date","getFullYear","getMonth","getDate","handleDayClick","_days$find","dayEvents","find","d","clientY","clientX","handleClosePopup","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","index","onClick","e","eventIndex","type","onClose","position","_c","$RefreshReg$"],"sources":["/Users/mastersky/work/calendar/src/components/calendar/Month.js"],"sourcesContent":["import { useState } from \"react\";\nimport { daysOfWeek } from \"../../constants\";\nimport { getDaysInMonth, getDaysInPreviousMonth, getFirstDayOfMonth } from \"../../utils\";\nimport \"./calendar.css\";\nimport { EventPopup } from \"./EventPopup\";\n\nexport const Month = ({ month, events }) => {\n  const { name, year } = month;\n  const [isPopupVisible, setPopupVisible] = useState(false);\n  const [selectedDayEvents, setSelectedDayEvents] = useState([]);\n  const [popupPosition, setPopupPosition] = useState({ top: 0, left: 0 });\n\n  const daysInMonth = getDaysInMonth(year, month.month);\n  const firstDay = getFirstDayOfMonth(year, month.month);\n  const days = [];\n  const daysInPrevMonth = getDaysInPreviousMonth(year, month.month);\n\n  for (let i = firstDay - 1; i >= 0; i--) {\n    days.push({\n      number: daysInPrevMonth - i,\n      isCurrentMonth: false,\n    });\n  }\n\n  for (let day = 1; day <= daysInMonth; day++) {\n    days.push({\n      number: day,\n      isCurrentMonth: true,\n      events: events.filter(\n        (event) =>\n          new Date(event.date).getFullYear() === year &&\n          new Date(event.date).getMonth() === month.month &&\n          new Date(event.date).getDate() === day\n      ),\n    });\n  }\n\n  const handleDayClick = (day, event) => {\n    const dayEvents = days.find((d) => d.number === day)?.events || [];\n      setSelectedDayEvents(dayEvents);\n      setPopupPosition({ top: event.clientY, left: event.clientX });\n      setPopupVisible(true);\n  };\n\n  const handleClosePopup = () => {\n    setPopupVisible(false);\n    setSelectedDayEvents([]);\n  };\n\n  return (\n    <div className=\"month\">\n      <div className=\"month_content\">\n        <h3 className=\"month_name\">{name}</h3>\n        <div className=\"days_of_week\">\n          {daysOfWeek.map((day, index) => (\n            <div className=\"day_week\" key={index}>\n              {day}\n            </div>\n          ))}\n        </div>\n        <div className=\"days\">\n          {days.map((day, index) => (\n            <div\n              className={`day ${!day.isCurrentMonth ? \"prev\" : \"\"}`}\n              key={index}\n              onClick={(e) => handleDayClick(day.number, e)}\n            >\n              {day.number}\n              <div className=\"day_indicators\">\n                {\" \"}\n                {day.events &&\n                  day.events.map((event, eventIndex) => (\n                    <div key={eventIndex} className={`day_indicator ${event.type}`} />\n                  ))}\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n      {isPopupVisible && (\n        <EventPopup events={selectedDayEvents} onClose={handleClosePopup} position={popupPosition} />\n      )}\n    </div>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}