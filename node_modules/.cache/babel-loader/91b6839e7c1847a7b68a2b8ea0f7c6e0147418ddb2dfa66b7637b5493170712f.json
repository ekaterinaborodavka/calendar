{"ast":null,"code":"var _jsxFileName = \"/Users/mastersky/work/calendar/src/components/calendar/Calendar.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { events, typeEvents } from \"../../constants\";\nimport { getMonths } from \"../../utils\";\nimport \"./calendar.css\";\nimport { Month } from \"./Month\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Calendar = () => {\n  _s();\n  const [selectedTypes, setSelectedTypes] = useState([]);\n  const currentDate = new Date();\n  const currentMonth = currentDate.getMonth();\n  const currentYear = currentDate.getFullYear();\n  const months = getMonths(currentMonth, currentYear);\n  const toggleType = type => {\n    const newSelectedTypes = new Set(selectedTypes);\n    if (newSelectedTypes.has(type)) newSelectedTypes.delete(type);else newSelectedTypes.add(type);\n    setSelectedTypes(newSelectedTypes);\n  };\n  const filteredEvents = events.filter(event => selectedTypes.has(event.type));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"calendar_section\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"calendar_title\",\n      children: \"Calendar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"events_wrapper\",\n      children: typeEvents.map((type, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n        className: `event ${selectedTypes.includes(type.slug) ? \"checked\" : \"\"} ${type.slug}`,\n        onClick: () => toggleType(type.slug),\n        children: type.title\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"calendar_wrapper\",\n      children: months.map((month, index) => /*#__PURE__*/_jsxDEV(Month, {\n        month: month\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_s(Calendar, \"+5hCKmF7MqZ3aBmT9eywRwaIciY=\");\n_c = Calendar;\nvar _c;\n$RefreshReg$(_c, \"Calendar\");","map":{"version":3,"names":["React","useState","events","typeEvents","getMonths","Month","jsxDEV","_jsxDEV","Calendar","_s","selectedTypes","setSelectedTypes","currentDate","Date","currentMonth","getMonth","currentYear","getFullYear","months","toggleType","type","newSelectedTypes","Set","has","delete","add","filteredEvents","filter","event","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","index","includes","slug","onClick","title","month","_c","$RefreshReg$"],"sources":["/Users/mastersky/work/calendar/src/components/calendar/Calendar.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { events, typeEvents } from \"../../constants\";\nimport { getMonths } from \"../../utils\";\nimport \"./calendar.css\";\nimport { Month } from \"./Month\";\n\nexport const Calendar = () => {\n  const [selectedTypes, setSelectedTypes] = useState([]);\n  const currentDate = new Date();\n  const currentMonth = currentDate.getMonth();\n  const currentYear = currentDate.getFullYear();\n  const months = getMonths(currentMonth, currentYear);\n\n  const toggleType = (type) => {\n    const newSelectedTypes = new Set(selectedTypes);\n    if (newSelectedTypes.has(type)) newSelectedTypes.delete(type);\n    else newSelectedTypes.add(type);\n    setSelectedTypes(newSelectedTypes);\n  };\n\n  const filteredEvents = events.filter(event => selectedTypes.has(event.type));\n\n  return (\n    <div className=\"calendar_section\">\n      <h2 className=\"calendar_title\">Calendar</h2>\n      <div className=\"events_wrapper\">\n        {typeEvents.map((type, index) => (\n          <p key={index} className={`event ${selectedTypes.includes(type.slug) ? \"checked\" : \"\" } ${type.slug}`} onClick={() => toggleType(type.slug)}>{type.title}</p>\n        ))}\n      </div>\n      <div className=\"calendar_wrapper\">\n        {months.map((month, index) => (\n          <Month key={index} month={month} />\n        ))}\n      </div>\n    </div>\n  );\n};\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,MAAM,EAAEC,UAAU,QAAQ,iBAAiB;AACpD,SAASC,SAAS,QAAQ,aAAa;AACvC,OAAO,gBAAgB;AACvB,SAASC,KAAK,QAAQ,SAAS;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhC,OAAO,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAMW,WAAW,GAAG,IAAIC,IAAI,CAAC,CAAC;EAC9B,MAAMC,YAAY,GAAGF,WAAW,CAACG,QAAQ,CAAC,CAAC;EAC3C,MAAMC,WAAW,GAAGJ,WAAW,CAACK,WAAW,CAAC,CAAC;EAC7C,MAAMC,MAAM,GAAGd,SAAS,CAACU,YAAY,EAAEE,WAAW,CAAC;EAEnD,MAAMG,UAAU,GAAIC,IAAI,IAAK;IAC3B,MAAMC,gBAAgB,GAAG,IAAIC,GAAG,CAACZ,aAAa,CAAC;IAC/C,IAAIW,gBAAgB,CAACE,GAAG,CAACH,IAAI,CAAC,EAAEC,gBAAgB,CAACG,MAAM,CAACJ,IAAI,CAAC,CAAC,KACzDC,gBAAgB,CAACI,GAAG,CAACL,IAAI,CAAC;IAC/BT,gBAAgB,CAACU,gBAAgB,CAAC;EACpC,CAAC;EAED,MAAMK,cAAc,GAAGxB,MAAM,CAACyB,MAAM,CAACC,KAAK,IAAIlB,aAAa,CAACa,GAAG,CAACK,KAAK,CAACR,IAAI,CAAC,CAAC;EAE5E,oBACEb,OAAA;IAAKsB,SAAS,EAAC,kBAAkB;IAAAC,QAAA,gBAC/BvB,OAAA;MAAIsB,SAAS,EAAC,gBAAgB;MAAAC,QAAA,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC5C3B,OAAA;MAAKsB,SAAS,EAAC,gBAAgB;MAAAC,QAAA,EAC5B3B,UAAU,CAACgC,GAAG,CAAC,CAACf,IAAI,EAAEgB,KAAK,kBAC1B7B,OAAA;QAAesB,SAAS,EAAE,SAASnB,aAAa,CAAC2B,QAAQ,CAACjB,IAAI,CAACkB,IAAI,CAAC,GAAG,SAAS,GAAG,EAAE,IAAKlB,IAAI,CAACkB,IAAI,EAAG;QAACC,OAAO,EAAEA,CAAA,KAAMpB,UAAU,CAACC,IAAI,CAACkB,IAAI,CAAE;QAAAR,QAAA,EAAEV,IAAI,CAACoB;MAAK,GAAhJJ,KAAK;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAA+I,CAC7J;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACN3B,OAAA;MAAKsB,SAAS,EAAC,kBAAkB;MAAAC,QAAA,EAC9BZ,MAAM,CAACiB,GAAG,CAAC,CAACM,KAAK,EAAEL,KAAK,kBACvB7B,OAAA,CAACF,KAAK;QAAaoC,KAAK,EAAEA;MAAM,GAApBL,KAAK;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAiB,CACnC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACzB,EAAA,CA/BWD,QAAQ;AAAAkC,EAAA,GAARlC,QAAQ;AAAA,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}